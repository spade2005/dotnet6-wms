@model mvc_andy.Services.Backend.PaginatedList<mvc_andy.Models.com.UserModel>

@{
    ViewData["Title"] = "管理员列表";
}

<h1>管理员列表</h1>

<p>
    <a asp-action="Create">创建</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].NickName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].RoleId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            var roleList = ViewData["roleList"] as Dictionary<int, string>;
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NickName)
                </td>
                <td>
                    @if (roleList != null && roleList.Any() && roleList.ContainsKey(item.RoleId))
                    {
                        @roleList[item.RoleId];
                    }
                </td>
                <td>
                    @item.StatusStr()
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">更新</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">详细</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">删除</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" class="btn btn-default @nextDisabled">
    Next
</a>
